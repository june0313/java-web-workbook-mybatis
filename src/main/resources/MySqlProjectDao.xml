<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC " - //mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace 속성은 자바의 패키지 처럼 sql문을 묶는 용도로 사용된다.-->
<mapper namespace="spms.dao.ProjectDao">
    <!--column과 연관된 setter 메소드를 정의한다-->
    <resultMap id="projectResultMap" type="project">
        <id column="PNO" property="no"/>
        <result column="PNAME" property="title"/>
        <result column="CONTENT" property="content"/>
        <result column="STA_DATE" property="startDate" javaType="java.sql.Date"/>
        <result column="END_DATE" property="endDate" javaType="java.sql.Date"/>
        <result column="STATE" property="state"/>
        <result column="CRE_DATE" property="createdDate" javaType="java.sql.Date"/>
        <result column="TAGS" property="tags"/>
    </resultMap>

    <!--각각의 sql문을 구분하기 위해 id속성 지정-->
    <!--결과를 담을 객체를 지정하기 위해 resultType 속성을 사용한다-->
    <select id="selectList1" resultType="spms.vo.Project">
        SELECT PNO as no, PNAME as title, STA_DATE as startDate, END_DATE as endDate, STATE
        FROM PROJECTS
        ORDER BY PNO DESC
    </select>

    <!--mybatis-config.xml 파일에 project alias가 등록되어 있는 경우 alias를 사용할 수 있다-->
    <select id="selectList2" resultType="project">
        SELECT PNO as no, PNAME as title, STA_DATE as startDate, END_DATE as endDate, STATE
        FROM PROJECTS
        ORDER BY PNO DESC
    </select>

    <!--select를 통해 생성된 결과 객체들은 캐싱해두고 다음 select를 실행할 때 재사용 된다-->
    <select id="selectList" parameterType="map" resultMap="projectResultMap">
        SELECT PNO, PNAME, STA_DATE, END_DATE, STATE
        FROM PROJECTS
        ORDER BY
        <choose>
            <when test="orderCond == 'TITLE_ASC'">PNAME asc</when>
            <when test="orderCond == 'TITLE_DESC'">PNAME desc</when>
            <when test="orderCond == 'STARTDATE_ASC'">STA_DATE asc</when>
            <when test="orderCond == 'STARTDATE_DESC'">STA_DATE desc</when>
            <when test="orderCond == 'ENDDATE_ASC'">END_DATE asc</when>
            <when test="orderCond == 'ENDDATE_DESC'">END_DATE desc</when>
            <when test="orderCond == 'STATE_ASC'">STATE asc</when>
            <when test="orderCond == 'STATE_DESC'">STATE desc</when>
            <when test="orderCond == 'PNO_ASC'">PNO asc</when>
            <otherwise>PNO desc</otherwise>
        </choose>
    </select>

    <insert id="insert" parameterType="project">
        INSERT INTO PROJECTS(PNAME, CONTENT, STA_DATE, END_DATE, STATE, CRE_DATE, TAGS)
        VALUES (#{title}, #{content}, #{startDate}, #{endDate}, 0, now(), #{tags})
    </insert>

    <select id="selectOne" parameterType="int" resultMap="projectResultMap">
        SELECT PNO, PNAME, CONTENT, STA_DATE, END_DATE, STATE, CRE_DATE, TAGS
        FROM PROJECTS
        WHERE PNO = #{value}
    </select>

    <update id="update" parameterType="map">
        UPDATE PROJECTS
        <set>
            <if test="title != null">PNAME=#{title},</if>
            <if test="content != null">CONTENT=#{content},</if>
            <if test="startDate != null">STA_DATE=#{startDate},</if>
            <if test="endDate != null">END_DATE=#{endDate},</if>
            <if test="state != null">STATE=#{state},</if>
            <if test="tags != null">TAGS=#{tags}</if>
        </set>
        WHERE PNO = #{no}
    </update>

    <delete id="delete" parameterType="int">
        DELETE FROM PROJECTS
        WHERE PNO = #{value}
    </delete>
</mapper>